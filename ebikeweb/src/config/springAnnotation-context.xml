<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
	http://www.springframework.org/schema/cache 
    http://www.springframework.org/schema/cache/spring-cache.xsd"
	default-autowire="byName" default-lazy-init="true">

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.clt">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	

	<!-- 自动扫描切面 -->
	  <aop:aspectj-autoproxy />  
	  
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> --><!-- 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller -->

<!-- 
<bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator">
  <property name="proxyTargetClass" value="true"/>
 </bean> -->
 
 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.0.57:1521:orcl" />
		<!--<property name="jdbcUrl" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl" />--> 
		<property name="user" value="cltwl" />
		<property name="password" value="cltwl" />
		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="40" />
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="1" />
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="5" />
		<!-- 指定连接数据库连接池的连接最大空闲时间 -->
		<property name="maxIdleTime" value="1800" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop> 
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
			</props>
		</property>
		<!-- 2======================= -->
		<!-- 自动扫描指定位置下的实体文件进行映射 -->
		<property name="packagesToScan">
			<list>
				<value>com.clt.sub.model</value>
				<value>com.clt.systemmanger.model</value>
				<value>com.clt.finance.model</value>
			</list>
		</property>		
		
		</bean>
		
		
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		 <property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager" >
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<tx:method name="save*"  propagation="REQUIRED"  rollback-for="java.lang.Exception" />
			<tx:method name="update*"  propagation="REQUIRED"  rollback-for="java.lang.Exception" />
			<tx:method name="delete*"  propagation="REQUIRED"  rollback-for="java.lang.Exception" />
			<tx:method name="del*"  propagation="REQUIRED"  rollback-for="java.lang.Exception" />
			<tx:method name="merage*"  propagation="REQUIRED" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(* com.clt.*.service.imp.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>
	
	 <task:annotation-driven  />    
  
    <task:scheduled-tasks scheduler="myScheduler">  
        <task:scheduled ref="taskSet" method="heartbeat" cron="* * 2 * * *"/>  
    </task:scheduled-tasks>  
    <task:scheduler id="myScheduler" pool-size="10"/> 
	
	<bean id="SpringContextUtil " class="com.clt.util.SpringContextUtil"  />
	
	<cache:annotation-driven cache-manager="cacheManager"/>
	 <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache"/>
	<!-- EhCache library setup -->
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:config/ehcache.xml" p:shared="true"/>


</beans>